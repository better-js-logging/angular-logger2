{"version":3,"sources":["webpack://AngularLogger2/webpack/universalModuleDefinition","webpack://AngularLogger2/webpack/bootstrap","webpack://AngularLogger2/./src/logging.types.ts","webpack://AngularLogger2/external {\"root\":[\"ng\",\"core\"],\"commonjs\":\"@angular/core\",\"commonjs2\":\"@angular/core\",\"amd\":\"@angular/core\"}","webpack://AngularLogger2/./src/logging.logger.ts","webpack://AngularLogger2/./src/logging.service.ts","webpack://AngularLogger2/./src/console.ts","webpack://AngularLogger2/external \"moment\"","webpack://AngularLogger2/external \"sprintf-js\"","webpack://AngularLogger2/./src/logging.module.ts","webpack://AngularLogger2/./src/index.ts"],"names":[],"mappings":"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","file":"angular-logger2.umd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@angular/core\"), require(\"moment\"), require(\"sprintf-js\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"AngularLogger2\", [\"@angular/core\", \"moment\", \"sprintf-js\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AngularLogger2\"] = factory(require(\"@angular/core\"), require(\"moment\"), require(\"sprintf-js\"));\n\telse\n\t\troot[\"AngularLogger2\"] = factory(root[\"ng\"][\"core\"], root[\"moment\"], root[\"sprintf-js\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__1__, __WEBPACK_EXTERNAL_MODULE__5__, __WEBPACK_EXTERNAL_MODULE__6__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","import {Injectable} from '@angular/core';\r\n\r\n@Injectable()\r\nexport class LoggingConfig {\r\n    constructor(public prefixPattern?: string,\r\n                public datetimePattern?: string,\r\n                public datetimeLocale?: string,\r\n                public contextLogLevels?: Array<ContextLogLevel>) {\r\n    }\r\n}\r\n\r\nexport class LogLevel {\r\n    public static TRACE = new LogLevel('TRACE', 4);\r\n    public static DEBUG = new LogLevel('DEBUG', 3);\r\n    public static INFO  = new LogLevel('INFO', 2);\r\n    public static WARN  = new LogLevel('WARN', 1);\r\n    public static ERROR = new LogLevel('ERROR', 0);\r\n    public static OFF   = new LogLevel('OFF', -1);\r\n    \r\n    constructor(public readonly name: string, public readonly level: number) {\r\n    }\r\n}\r\n\r\nexport class ContextLogLevel {\r\n    constructor(public readonly context: string,\r\n                public readonly logLevel: LogLevel) {\r\n    }\r\n}","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","import * as sprintfjs from 'sprintf-js';\r\nconst sprintf = sprintfjs.sprintf;\r\nimport * as moment from 'moment';\r\nimport {ContextLogLevel, LoggingConfig, LogLevel} from './logging.types';\r\nimport requireConsole from './console';\r\n\r\nexport class LoggerBase {\r\n    protected log(args: IArguments, loggingFunc, level: LogLevel, context, config): Array<any> {\r\n        if (this.levelPassesThreshold(context, level, config)) {\r\n            const enhancedArguments = this.enhanceLogline(args, context, level, config);\r\n            loggingFunc.apply(null, enhancedArguments);\r\n            return enhancedArguments; // return for testing purposes\r\n        } else {\r\n            return null; // no log produced\r\n        }\r\n    }\r\n    \r\n    private levelPassesThreshold(context: string, logLevel: LogLevel, config: LoggingConfig): boolean {\r\n        return logLevel.level > LogLevel.OFF.level && logLevel.level <= this.getLogLevelThreshold(context, config).level;\r\n    }\r\n    \r\n    private getLogLevelThreshold(context: string, config: LoggingConfig): LogLevel {\r\n        if (context) {\r\n            const logLevelForContext: ContextLogLevel = this.findLogLevelForContext(config.contextLogLevels, context);\r\n            if (logLevelForContext) {\r\n                return logLevelForContext.logLevel;\r\n            } else if (context.indexOf('.') !== -1) {\r\n                return this.getLogLevelThreshold(context.substring(0, context.lastIndexOf('.')), config);\r\n            }\r\n        }\r\n        const catchAll: ContextLogLevel = this.findLogLevelForContext(config.contextLogLevels, '*');\r\n        return (catchAll && catchAll.logLevel) || LogLevel.TRACE;\r\n    }\r\n    \r\n    private findLogLevelForContext(contextLogLevels: Array<ContextLogLevel>, context: string): ContextLogLevel {\r\n        return contextLogLevels.find((c: ContextLogLevel) => c.context == context);\r\n    }\r\n    \r\n    private enhanceLogline(args, context: string, logLevel: LogLevel, config: LoggingConfig) {\r\n        const prefix = this.generatePrefix(context, logLevel, config);\r\n        const processedArgs = this.maybeApplySprintf([].slice.call(args));\r\n        return [prefix].concat([].slice.call(processedArgs));\r\n    }\r\n    \r\n    private maybeApplySprintf(args: any[]) {\r\n        const sprintfAvailable: boolean = typeof sprintf !== 'undefined';\r\n        const sprintfCandidate = sprintfAvailable && args.length >= 2 && typeof args[0] === 'string' && args[0].indexOf('%') !== -1;\r\n        if (sprintfCandidate) {\r\n            try {\r\n                // apply sprintf with the proper arguments\r\n                const placeholderCount = this.countSprintfHolders(args[0]);\r\n                if (placeholderCount > 0) {\r\n                    args[0] = sprintf.apply(null, args);\r\n                    args.splice(1, placeholderCount); // remove arguments consumed by sprintf\r\n                }\r\n            } catch (e) {\r\n                // invalid arguments passed into sprintf, continue without applying\r\n                args.unshift(e);\r\n            }\r\n        }\r\n        \r\n        return args;\r\n    }\r\n    \r\n    private generatePrefix(context: string, level: LogLevel, config: LoggingConfig) {\r\n        let dateStr: string = '';\r\n        if (typeof moment !== 'undefined') {\r\n            dateStr = moment().locale(config.datetimeLocale).format(config.datetimePattern);\r\n        } else {\r\n            const d: Date = new Date();\r\n            const timeStr: string = new Date().toTimeString().match(/^([0-9]{2}:[0-9]{2}:[0-9]{2})/)[0];\r\n            dateStr = d.getDate() + '-' + (d.getMonth() + 1) + '-' + d.getFullYear() + ' ' + timeStr;\r\n        }\r\n        \r\n        if (typeof sprintf !== 'undefined') {\r\n            return sprintf(config.prefixPattern, dateStr, context, level.name.toLowerCase());\r\n        } else {\r\n            // use fixed layout: '%s::[%s]%s> '\r\n            return dateStr + '::' + context + '::' + level.name.toLowerCase() + '> ';\r\n        }\r\n    }\r\n    \r\n    private countSprintfHolders(pattern: string) {\r\n        const hasNamedHolders = /\\x25\\([a-zA-Z0-9_]+\\)[b-fijosuxX]/.test(pattern);\r\n        if (hasNamedHolders) {\r\n            return 1;\r\n        }\r\n        \r\n        let placeholderCounter = 0;\r\n        \r\n        function f(index: number) {\r\n            // keep track of highest arg index, needed for single -but indexed- placeholders placeholder (ie. %6$s consumes the first 6 arguments)\r\n            return (): any => placeholderCounter = Math.max(placeholderCounter, index);\r\n        }\r\n        \r\n        // this scary approach makes use of sprintf's function argument style, so we can check  how many arguments\r\n        // sprintf is trying to fill in by calling our function f(). Then we know how many placeholders there are.\r\n        sprintf(pattern, f(1), f(2), f(3), f(4), f(5), f(6), f(7), f(8), f(9), f(10));\r\n        return placeholderCounter;\r\n    }\r\n}\r\n\r\nexport class Logger extends LoggerBase {\r\n    \r\n    private static console: { trace, debug, info, warn, error } = requireConsole();\r\n    \r\n    constructor(private readonly context: string,\r\n                private readonly config: LoggingConfig) {\r\n        super();\r\n    }\r\n    \r\n    trace(message?: any, ...rest: any[]): Array<any> {\r\n        return this.log(arguments, function() { Logger.console.trace.apply(Logger.console, arguments) }, LogLevel.TRACE, this.context, this.config);\r\n    }\r\n    \r\n    debug(message?: any, ...rest: any[]): Array<any> {\r\n        return this.log(arguments, function() { Logger.console.debug.apply(Logger.console, arguments) }, LogLevel.DEBUG, this.context, this.config);\r\n    }\r\n    \r\n    info(message?: any, ...rest: any[]): Array<any> {\r\n        return this.log(arguments, function() { Logger.console.info.apply(Logger.console, arguments) }, LogLevel.INFO, this.context, this.config);\r\n    }\r\n    \r\n    warn(message?: any, ...rest: any[]): Array<any> {\r\n        return this.log(arguments, function() { Logger.console.warn.apply(Logger.console, arguments) }, LogLevel.WARN, this.context, this.config);\r\n    }\r\n    \r\n    error(message?: any, ...rest: any[]): Array<any> {\r\n        return this.log(arguments, function() { Logger.console.error.apply(Logger.console, arguments) }, LogLevel.ERROR, this.context, this.config);\r\n    }\r\n}","import {Inject, Injectable, Optional} from '@angular/core';\r\nimport {ContextLogLevel, LoggingConfig, LogLevel} from './logging.types';\r\nimport {Logger} from './logging.logger';\r\n\r\n@Injectable()\r\nexport class LoggingService {\r\n    private static readonly DEFAULT_CONFIG: LoggingConfig = new LoggingConfig(\r\n        '%s::[%s]> ',\r\n        'LLL',\r\n        window.navigator.language || 'en',\r\n        [new ContextLogLevel('*', LogLevel.TRACE)]\r\n    );\r\n    \r\n    /**\r\n     * Convenience method to quickly retrieve a logger without going through Angular first (also missing out on default config provided through Angular).\r\n     */\r\n    static getLogger(context?: string, prefixPattern?: string, datetimeLocale?: string, datetimePattern?: string, logLevel?: LogLevel): Logger {\r\n        return new LoggingService().getLogger(context, prefixPattern, datetimeLocale, datetimePattern, logLevel);\r\n    }\r\n    \r\n    constructor(@Inject(LoggingConfig) @Optional() private readonly config?: LoggingConfig) {\r\n        if (config && typeof(console) !== 'undefined' && console && console.debug) {\r\n            console.debug('creating new LoggingService with injected config:', config);\r\n        }\r\n        this.config = new LoggingConfig(\r\n            (config && config.prefixPattern) || LoggingService.DEFAULT_CONFIG.prefixPattern,\r\n            (config && config.datetimePattern) || LoggingService.DEFAULT_CONFIG.datetimePattern,\r\n            (config && config.datetimeLocale) || LoggingService.DEFAULT_CONFIG.datetimeLocale,\r\n            (config && config.contextLogLevels) || LoggingService.DEFAULT_CONFIG.contextLogLevels);\r\n    }\r\n    \r\n    getLogger(context: string = this.createRandomName(), prefixPattern?: string, datetimeLocale?: string, datetimePattern?: string, logLevel?: LogLevel): Logger {\r\n        return new Logger(context, new LoggingConfig(\r\n            prefixPattern || this.config.prefixPattern,\r\n            datetimePattern || this.config.datetimePattern,\r\n            datetimeLocale || this.config.datetimeLocale,\r\n            (logLevel && [new ContextLogLevel(context, logLevel)]) || this.config.contextLogLevels));\r\n    }\r\n    \r\n    private createRandomName(): string {\r\n        return this.createRandomWord(5) + ' ' + this.createRandomWord(5);\r\n    }\r\n    \r\n    /**\r\n     * Updated version of: https://j11y.io/javascript/random-word-generator/\r\n     */\r\n    private createRandomWord(length: number): string {\r\n        const consonants: string[] = 'bcdfghjklmnpqrstvwxyz'.split('');\r\n        const vowels: string[] = 'aeiou'.split('');\r\n        const rand: (number) => number = (limit) => Math.floor(Math.random() * limit);\r\n        let word = '';\r\n        for (let i = 0; i < length / 2; i++) {\r\n            const randConsonant = consonants[rand(consonants.length)];\r\n            const randVowel = vowels[rand(vowels.length)];\r\n            word += (i === 0) ? randConsonant.toUpperCase() : randConsonant;\r\n            word += i * 2 < length - 1 ? randVowel : '';\r\n        }\r\n        return word;\r\n    }\r\n}\r\n","export default function requireConsole(): { trace, info, debug, warn, error } {\r\n    const noop: () => void = () => null;\r\n    return (typeof(console) !== 'undefined') ? console :\r\n        {trace: noop, debug: noop, info: noop, warn: noop, error: noop};\r\n}","module.exports = __WEBPACK_EXTERNAL_MODULE__5__;","module.exports = __WEBPACK_EXTERNAL_MODULE__6__;","import {NgModule} from '@angular/core';\nimport {LoggingService} from './logging.service';\n\n@NgModule({\n    providers: [LoggingService]\n})\n\nexport class LoggingModule {\n\n}","export * from './logging.module';\r\nexport * from './logging.types';\r\nexport * from './logging.logger';\r\nexport * from './logging.service';"],"sourceRoot":""}